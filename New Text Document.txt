package com.retail.purchasemanager.util;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

/**
 * Utility class to load and retrieve error messages from properties file.
 * Implements Singleton pattern for efficient resource usage.
 * 
 * @author Retail Team
 * @version 1.0
 */
public final class ErrorMessageUtil {
    
    private static final Logger logger = LoggerFactory.getLogger(ErrorMessageUtil.class);
    private static final String ERROR_PROPERTIES_FILE = "errors.properties";
    private static ErrorMessageUtil instance;
    private final Properties errorProperties;
    
    private ErrorMessageUtil() {
        errorProperties = new Properties();
        loadProperties();
    }
    
    /**
     * Get singleton instance of ErrorMessageUtil.
     * Thread-safe implementation.
     */
    public static synchronized ErrorMessageUtil getInstance() {
        if (instance == null) {
            instance = new ErrorMessageUtil();
        }
        return instance;
    }
    
    /**
     * Load error messages from properties file.
     */
    private void loadProperties() {
        try (InputStream input = getClass().getClassLoader()
                .getResourceAsStream(ERROR_PROPERTIES_FILE)) {
            
            if (input == null) {
                logger.error("Unable to find {}", ERROR_PROPERTIES_FILE);
                return;
            }
            
            errorProperties.load(input);
            logger.info("Successfully loaded error messages from {}", ERROR_PROPERTIES_FILE);
            
        } catch (IOException e) {
            logger.error("Error loading error properties file", e);
        }
    }
    
    /**
     * Get error message for a given error code.
     * 
     * @param errorCode The error code
     * @return Error message or a default message if not found
     */
    public String getErrorMessage(String errorCode) {
        String message = errorProperties.getProperty(errorCode);
        
        if (message == null) {
            logger.warn("Error message not found for code: {}", errorCode);
            return "An error occurred. Error code: " + errorCode;
        }
        
        return message;
    }
    
    /**
     * Get error message with dynamic parameters.
     * 
     * @param errorCode The error code
     * @param params Dynamic parameters to replace placeholders
     * @return Formatted error message
     */
    public String getErrorMessage(String errorCode, Object... params) {
        String message = getErrorMessage(errorCode);
        return String.format(message, params);
    }
}
